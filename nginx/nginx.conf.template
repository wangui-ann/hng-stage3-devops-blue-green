events {}

http {
    include       mime.types;
    default_type  application/json;
    sendfile        on;
    keepalive_timeout 65;

    # Upstream pool â€” primary = ${ACTIVE_POOL}, backup = the other one
    upstream backend {
        # Primary app (active pool)
        server ${ACTIVE_POOL}_app:${PORT} max_fails=1 fail_timeout=1s;

        # Backup app (the opposite of ACTIVE_POOL)
        server blue_app:${PORT} backup;
        server green_app:${PORT} backup;
    }

    server {
        listen 80;

        location / {
            proxy_pass http://backend;
            proxy_http_version 1.1;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_connect_timeout 1s;
            proxy_send_timeout 1s;
            proxy_read_timeout 1s;

            # Retry on errors or timeouts to backup
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 2;
        }
    }
}
